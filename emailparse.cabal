-- Initial emailparse.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                emailparse
version:             0.2.0.10
synopsis:            An email parser that will parse everything
--description:
license:             BSD3
license-file:        LICENSE
author:              Michal Kawalec
maintainer:          michal@monad.cat
-- copyright:
category:            Network
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10
source-repository head
  type: git
  location: https://github.com/mkawalec/emailparse

library
  exposed-modules:     Network.Mail.Parse
                       Network.Mail.Parse.Types
                       Network.Mail.Parse.Utils
                       Network.Mail.Parse.Decoders.BodyDecoder
                       Network.Mail.Parse.Decoders.FormatDecoders
                       Network.Mail.Parse.Parsers.Header
                       Network.Mail.Parse.Parsers.HeaderFields
                       Network.Mail.Parse.Parsers.Message
                       Network.Mail.Parse.Parsers.Multipart
                       Network.Mail.Parse.Parsers.Utils
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.10 && <5.0,
                       bytestring,
                       attoparsec,
                       word8,
                       text,
                       mime,
                       either,
                       text-icu,
                       time,
                       strptime
  hs-source-dirs:      src
  c-sources:           csrc/codec.c
  include-dirs:        csrc
  cc-options:          -fPIC -Wall -Wextra
  default-language:    Haskell2010
  ghc-options:         -Wall -fno-warn-unused-do-bind
  default-extensions:  OverloadedStrings,
                       GeneralizedNewtypeDeriving,
                       BangPatterns,
                       ScopedTypeVariables,
                       TypeSynonymInstances,
                       DeriveFunctor,
                       DeriveGeneric,
                       FlexibleInstances,
                       TemplateHaskell,
                       LambdaCase

Test-Suite emailparse-test
  type: exitcode-stdio-1.0
  main-is: main.hs
  hs-source-dirs: test, src
  build-depends:       base >=4.10 && <5.0,
                       bytestring,
                       attoparsec,
                       word8,
                       text,
                       mime,
                       either,
                       text-icu,
                       time,
                       strptime,

                       tasty,
                       HUnit,
                       QuickCheck,
                       tasty-hunit,
                       tasty-quickcheck,
                       mtl
  c-sources:           csrc/codec.c
  include-dirs:        csrc
  cc-options:          -fPIC -Wall -Wextra
  default-language:    Haskell2010
  default-extensions:  OverloadedStrings,
                       GeneralizedNewtypeDeriving,
                       BangPatterns,
                       ScopedTypeVariables,
                       TypeSynonymInstances,
                       DeriveFunctor,
                       DeriveGeneric,
                       FlexibleInstances,
                       TemplateHaskell,
                       LambdaCase
